#Problema 3
hombres <- medallistas[medallistas$Sex=="M",]
alturaPromedioDeHombres<- mean(hombres$Height, na.rm = T)
pais<- split(x = medallistas, f = medallistas$Country)
mujeresAltas <- function(df){
mujeres <- df[df$Sex=="F",]
mujeresGanadoras <- mujeres[df$Height>alturaPromedioDeHombres,]
return(mujeresGanadoras)
}
resultado <- mujeresAltas(medallistas)
mujeres2<- lapply(X = pais, FUN = mujeresAltas)
R2 <- mujeres2
#Problema 4
pais <- split(x = medallistas, f = medallistas$Country)
atleta1 <- function(df){
atleta2 <- df[order(df$Age,decreasing  = T),]
hombres <- atleta2[df$Sex=="M",][1,]
return(hombres)
}
resultado <-atleta1(medallistas)
atleta3<- lapply(X = pais,FUN = atleta1)
R3 <- atleta3
# Problema 5
medallistas$G <- NULL
medallistas$S <- NULL
medallistas$B <- NULL
medallistas$Event <- NULL
medallistas$Sex <- NULL
medallistas$Weight <- NULL
medallistas$Medal_winner <- NULL
x <- head(medallistas)
lista<- split(x = medallistas,f = medallistas$Sport)
estatura<- function(df){
resultado <- medallistas[order(df$Height,decreasing = T),][1:3,]
return(resultado)
}
mayor_estatura_deporte <- lapply(X = lista,FUN = estatura)
R4<- mayor_estatura_deporte
#Problema 6
a<- lista_pais_medallas[order(paisesConMedallas, decreasing = T)]
R5<- a[1:5]
R5
RESPUESTAS<-list(R1,R2,R3,R4,R5)
RESPUESTAS
load("~/Desktop/grad.csv")
estudiantes <- read.csv("/Users/sophiagamarro/Desktop/grad.csv",sep = ";" ,stringsAsFactors = F)
load("~/Desktop/grad.csv")
getwd()
install.packages("dplyr")
View(extraer_promedio)
library(dplyr) # for functions
library(hflights) # for data
head(hflights)
library(utils)
remove.packages("acepack")
View(respuestas)
library(dplyr) # for functions
install.packages("dplyr")
library(dplyr) # for functions
library(dplyr)
#a
# Formula de crecimiento exponencial y=yo(e^(rt))
# 2yo = y
# r = 20%
tiempo <- round(log(x=2)/(0.2))
tiempo
#En 3 días el número de casos confirmados será el doble que el actual.
#b
crecimiento <- function(yo,r,t)
{
y = round(yo*exp(r*t)) #Entero porque el numero de confirmados no puede ser decimal
return(y)
}
crecimiento(6,0.1,5)
tiempo <- round(log(x=2)/(0.2))
tiempo
crecimiento <- function(yo,r,t)
{
y = round(yo*exp(r*t)) #Entero porque el numero de confirmados no puede ser decimal
return(y)
}
crecimiento(6,0.1,5)
caso_a <- 0
caso_b <-100
doble_casos<- 2*caso_b
while(caso_b<= doble_casos){
caso_b<-0.22*caso_b
caso_a<-caso_a+1
}
#Sophia Gamarro
#Carne: 20170356
library(dplyr)
#PROBLEMA 1. A
# Formula de crecimiento exponencial y=yo(e^(rt))
# 2yo = y
# r = 20%
tiempo <- round(log(x=2)/(0.2))
tiempo
#En 3 días el número de casos confirmados será el doble que el actual.
#PROBLEMA 1.B
crecimiento <- function(yo,r,t)
{
y = round(yo*exp(r*t)) #Entero porque el numero de confirmados no puede ser decimal
return(y)
}
crecimiento(6,0.1,5)
#Sophia Gamarro
#Carne: 20170356
library(dplyr)
#PROBLEMA 1. A
# Formula de crecimiento exponencial y=yo(e^(rt))
# 2yo = y
# r = 20%
tiempo <- round(log(x=2)/(0.22))
tiempo
#En 3 días el número de casos confirmados será el doble que el actual.
#PROBLEMA 1.B
crecimiento <- function(yo,r,t)
{
y = round(yo*exp(r*t)) #Entero porque el numero de confirmados no puede ser decimal
return(y)
}
crecimiento(6,0.1,5)
#a
# Formula de crecimiento exponencial y=yo(e^(rt))
# 2yo = y
# r = 20%
tiempo <- round(log(x=2)/(0.22))
tiempo
#En 3 días el número de casos confirmados será el doble que el actual.
#b
crecimiento <- function(yo,r,t)
{
y = yo*exp(r*t) #Entero porque el numero de confirmados no puede ser decimal
return(y)
}
crecimiento(5,0.4,5)
#a
# Formula de crecimiento exponencial y=yo(e^(rt))
# 2yo = y
# r = 20%
tiempo <- round(log(x=2)/(0.22))
tiempo
#En 3 días el número de casos confirmados será el doble que el actual.
#b
crecimiento <- function(yo,r,t)
{
y = yo*exp(r*t) #Entero porque el numero de confirmados no puede ser decimal
return(y)
}
crecimiento(6,0.1,5)
getwd()
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
data_parcial2 <- read_csv("Desktop/examen parcial R/data_parcial2.csv")
View(data_parcial2)
Analisis <- read.csv("data_parcial2.csv")
sector <- split(Analisis, Analisis$Sector)
MarketCap <- function(df)
{
EmpresaAlta <- df %>% arrange(desc(Market.Cap..billions.))
maxima <- EmpresaAlta[1,]
return(maxima)
}
MaxCapSector <- lapply(sector,MarketCap)
MaxCapSector
Analisis <- read.csv("/Users/sophiagamarro/Desktop/data_parcial2.csv")
Analisis <- read.csv("/Users/sophiagamarro/Desktop/data_parcial2.csv")
sector <- split(Analisis, Analisis$Sector)
MarketCap <- function(df)
{
EmpresaAlta <- df %>% arrange(desc(Market.Cap..billions.))
maxima <- EmpresaAlta[1,]
return(maxima)
}
MaxCapSector <- lapply(sector,MarketCap)
MaxCapSector
#PROBLEMA 2.B
Ejercicio2 <- function(df)
{
EmpresaSector <- df %>% group_by(Name) %>% summarise(Promedio_Price_Earnings = mean(Price.Earnings))
return(EmpresaSector)
}
Promedio_P_E <- lapply(sector, Ejercicio2)
#Ejercicio  3
Ejercicio3 <- function(df)
{
maximo <- max(df$Price.Earnings)
minimo<-min(df$Price.Earnings)
eje3 <- df %>% group_by(Sector) %>% summarise(PriceEarningMasAlto = maximo, PriceEarningsBajo=minimo, Numero = n())
return(eje3)
}
Respuesta2 <- lapply(sector,Ejercicio3)
Respuesta2
Promedio_P_E
Respuesta3 <- lapply(sector,Ejercicio3)
Respuesta3
#Sophia Gamarro
#carne: 20170356
#SEGUNDO EXAMEN PARCIAL
library(dplyr)
#PROBLEMA 1.A
# Formula de crecimiento exponencial y=yo(e^(rt))
# 2yo = y
# r = 22%
tiempo <- round(log(x=2)/(0.22))
tiempo
#En 3 días el número de casos confirmados será el doble que el actual.
#PBOBLEMA 1.B
crecimiento <- function(yo,r,t)
{
y = yo*exp(r*t) #confirmados no puede ser decimal
return(y)
}
crecimiento(2,0.5,9)
#PROBLEMA 2.A
Analisis <- read.csv("/Users/sophiagamarro/Desktop/data_parcial2.csv")
sector <- split(Analisis, Analisis$Sector)
MarketCap <- function(df)
{
EmpresaAlta <- df %>% arrange(desc(Market.Cap..billions.))
maxima <- EmpresaAlta[1,]
return(maxima)
}
MaxCapSector <- lapply(sector,MarketCap)
MaxCapSector
#PROBLEMA 2.B
Ejercicio2 <- function(df)
{
EmpresaSector <- df %>% group_by(Name) %>% summarise(Promedio_Price_Earnings = mean(Price.Earnings))
return(EmpresaSector)
}
Promedio_P_E <- lapply(sector, Ejercicio2)
Promedio_P_E
#PROBLEMA 2.C
Ejercicio3 <- function(df)
{
maximo <- max(df$Price.Earnings)
minimo<-min(df$Price.Earnings)
eje3 <- df %>% group_by(Sector) %>% summarise(PriceEarningMasAlto = maximo, PriceEarningsBajo=minimo, Numero = n())
return(eje3)
}
Respuesta3 <- lapply(sector,Ejercicio3)
Respuesta3
#Problema 1
y = c(1,2,3,4);
x = c(5,6,7,8);
ponderado <-  function(x,y)
{
suma = 0;
for(i in 1:length(x))
{
suma=suma + x[i]*y[i];
}
p = suma/length(y)
return(p);
}
ponderado(x,y);
#Problema 1
y = c(1,2,3,4);
x = c(5,6,7,8);
ponderado <-  function(x,y)
{
suma = 0;
ponderador = 0;
for(i in 1:length(x))
{
suma=suma + x[i]*y[i];
ponderador = ponderador + y[i];
}
p = suma/ponderador
return(p);
}
ponderado(x,y);
load("~/Desktop/data_municipios.csv")
data <- read.csv("data_municipios.csv")
library(readr)
data_municipios <- read_csv("Desktop/data_municipios.csv")
View(data_municipios)
data <- read.csv("data_municipios.csv")
data <- read.csv("data_municipios.csv")
data <- read.csv("data_municipios.csv")
getwd()
View(matrizA)
library(dplyr)
data <- read.csv("/Users/sophiagamarro/Desktop/data_municipios.csv")
departamentos<- split(x = data, f = data$DEPARTAMENTO);
Municipio_PIB<- function(df){
PIB_MAX <- df[which.max(df$PIB.per.capita.2017..US..al.ano.),]
PIB_MIN <- df[which.min(df$PIB.per.capita.2017..US..al.ano.),]
x <- PIB_MAX[,c(5,8)]
y <- PIB_MIN[,c(5,8)]
PIB_MUNI <- rbind.data.frame(x,y)
return(PIB)
}
A <- lapply(departamentos, Municipio_PIB)
#Problema 2
datos2<- function(pobl){
pobl$Indigenas <- pobl$Poblacion..2018. * pobl$X..Indigenas..2014.
municipios <- pobl[,c(5,57)]
return(municipios)
}
B <- lapply(departamentos, datos2)
#Problema 2
datos2<- function(pobl){
pobl$Indigenas <- pobl$Poblacion..2018. * pobl$X..Indigenas..2014.
municipios <- pobl[,c(5,57)]
return(municipios)
}
B <- lapply(departamentos, datos2)
B
#PROBLEMA C
NuevaTabla <- function(df)
{
Cantidad <- df %>% group_by(df$MUNICIPIO) %>% summarise(ncant =n())
Poblacion <- df %>% group_by(df$Poblacion..2018.) %>% summarise(Total=sum(Poblacion..2018.))
PIBPerCapita <- df %>% group_by(df$MUNICIPIO) %>% summarise(Total=PIB.per.capita.2017..US..al.ano./sum(Poblacion..2018.))
Tabla <- rbind.data.frame(Cantidad$ncant,Poblacion$Total,PIBPerCapita$Total)
return(Tabla)
}
Problema2C<- lapply(departamentos, NuevaTabla)
#PROBLEMA C
NuevaTabla <- function(df)
{
Cantidad <- df %>% group_by(df$MUNICIPIO) %>% summarise(ncant =n())
Poblacion <- df %>% group_by(df$Poblacion..2018.) %>% summarise(Total=sum(Poblacion..2018.))
PIBPerCapita <- df %>% group_by(df$MUNICIPIO) %>% summarise(Total=PIB.per.capita.2017..US..al.ano./sum(Poblacion..2018.))
Tabla <- rbind.data.frame(Cantidad$ncant,Poblacion$Total,PIBPerCapita$Total)
return(Tabla)
}
C<- lapply(departamentos, NuevaTabla)
C
#problema1
data <- read.csv("/Users/sophiagamarro/Desktop/data_municipios.csv")
departamentos<- split(x = data, f = data$DEPARTAMENTO);
Municipio_PIB<- function(df){
PIB_MAX <- df[which.max(df$PIB.per.capita.2017..US..al.ano.),]
PIB_MIN <- df[which.min(df$PIB.per.capita.2017..US..al.ano.),]
x <- PIB_MAX[,c(5,8)]
y <- PIB_MIN[,c(5,8)]
PIB_MUNI <- rbind.data.frame(x,y)
return(PIB_MUNI)
}
A <- lapply(departamentos, Municipio_PIB)
A
Cuartiles <- quantile(municipios$Extension.Territorial..Km2., Probability = c(0.25,0.5,0.75,1))
DatosObtenidos<- c(60,136,294,8874)
municipios$Espacio <- cut(municipios$Extension.Territorial..Km2., breaks = DatosObtenidos, right = FALSE)
Cuartiles <- quantile(data$Extension.Territorial..Km2., Probability = c(0.25,0.5,0.75,1))
DatosObtenidos<- c(60,136,294,8874)
data$Espacio <- cut(data$Extension.Territorial..Km2., breaks = DatosObtenidos, right = FALSE)
NuevaTabla <- function(df)
{
Cantidad <- df %>% group_by(df$MUNICIPIO) %>% summarise(ncant =n())
Poblacion <- df %>% group_by(df$Poblacion..2018.) %>% summarise(Total=sum(Poblacion..2018.))
PIBPerCapita <- df %>% group_by(df$MUNICIPIO) %>% summarise(Total=PIB.per.capita.2017..US..al.ano./sum(Poblacion..2018.))
Tabla <- rbind.data.frame(Cantidad$ncant,Poblacion$Total,PIBPerCapita$Total)
return(Tabla)
}
C<- lapply(departamentos, NuevaTabla)
C
#problema d
Cuartiles <- quantile(data$Extension.Territorial..Km2., Probability = c(0.25,0.5,0.75,1))
DatosObtenidos<- c(60,136,294,8874)
data$Espacio <- cut(data$Extension.Territorial..Km2., breaks = DatosObtenidos, right = FALSE)
Cuartiles <- quantile(data$Extension.Territorial..Km2., Probability = c(0.25,0.5,0.75,1))
DatosObtenidos<- c(60,136,294,8874)
data$Espacio <- cut(data$Extension.Territorial..Km2., breaks = DatosObtenidos, right = FALSE)
data <- read.csv("/Users/sophiagamarro/Desktop/data_municipios.csv")
departamentos<- split(x = data, f = data$DEPARTAMENTO);
Municipio_PIB<- function(df){
PIB_MAX <- df[which.max(df$PIB.per.capita.2017..US..al.ano.),]
PIB_MIN <- df[which.min(df$PIB.per.capita.2017..US..al.ano.),]
x <- PIB_MAX[,c(5,8)]
y <- PIB_MIN[,c(5,8)]
PIB_MUNI <- rbind.data.frame(x,y)
return(PIB_MUNI)
}
A <- lapply(departamentos, Municipio_PIB)
A
#Problema 2
datos2<- function(pobl){
pobl$Indigenas <- pobl$Poblacion..2018. * pobl$X..Indigenas..2014.
municipios <- pobl[,c(5,57)]
return(municipios)
}
B <- lapply(departamentos, datos2)
B
calculate_mode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
v1 <- c(2,1,2,3,1,2,3,4,1,5,5,3,2,3)
v2<- c(5,2,5,9,9,7,5,6,1,3,9,7,4,9)
v3 <- c(4,5,3,6,6,3,3,1,2,5,7,5,8,7)
list_vector <- list(v1,v2,v3)
lapply(list_vector, calculate_mode)
calculate_mode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
vector_1 <- c(2,1,2,3,1,2,3,4,1,5,5,3,2,3)
vector_2<- c(5,2,5,9,9,7,5,6,1,3,9,7,4,9)
vector_3 <- c(4,5,3,6,6,3,3,1,2,5,7,5,8,7)
lista <- list(vector_1,vector_2,vector_3)
lapply(lista, calculate_mode)
#Problema2
moda <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
vector_1 <- c(2,1,2,3,1,2,3,4,1,5,5,3,2,3)
vector_2<- c(5,2,5,9,9,7,5,6,1,3,9,7,4,9)
vector_3 <- c(4,5,3,6,6,3,3,1,2,5,7,5,8,7)
lista <- list(vector_1,vector_2,vector_3)
lapply(lista, moda)
parque_vehicular
parque_vehicular<-read.delim("Parque.txt", header=T, sep="-")
parque_vehicular
library(readxl)
library(readr)
library(tidyverse)
library(tidytext)
library(dplyr)
setwd("/Users/sophiagamarro/Documents/Semestre II 2020/Data Wrangling/Lab1")
excel1<-read_excel('01-2018.xlsx')
excel2<-read_excel('02-2018.xlsx')
excel3<-read_excel('03-2018.xlsx')
excel4<-read_excel('04-2018.xlsx')
excel5<-read_excel('05-2018.xlsx')
excel6<-read_excel('06-2018.xlsx')
excel7<-read_excel('07-2018.xlsx')
excel8<-read_excel('08-2018.xlsx')
excel9<-read_excel('09-2018.xlsx')
excel10<-read_excel('10-2018.xlsx')
excel11<-read_excel('11-2018.xlsx')
excel1$Fecha <- "01-2018"
excel2$Fecha <- "01-2018"
excel3$Fecha <- "01-2018"
excel4$Fecha <- "01-2018"
excel5$Fecha <- "01-2018"
excel6$Fecha <- "01-2018"
excel7$Fecha <- "01-2018"
excel8$Fecha <- "01-2018"
excel9$Fecha <- "01-2018"
excel10$Fecha <- "01-2018"
excel11$Fecha <- "01-2018"
dataset<-dplyr::bind_rows(excel1,excel2, excel3, excel4, excel5, excel6, excel7, excel8, excel9, excel10, excel11)
write.csv(dataset,'dataset.csv')
#Problema2
moda <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
vector_1 <- c(4,1,3,9,7)
vector_2<- c(1,9,4,2,2)
vector_3 <- c(9,1,4,5,1)
lista <- list(vector_1,vector_2,vector_3)
lapply(lista, moda)
#Problema3
parque_vehicular<-read.delim("Parque.txt", header=T, sep="-")
parque_vehicular
setwd("/Users/sophiagamarro/Documents/Semestre II 2020/Data Wrangling/Lab1")
parque_vehicular<-read.delim("Parque.txt", header=T, sep="-")
parque_vehicular
parque_vehicular<-read.delim("Parque.txt", header=T, sep="\t")
parque_vehicular
library(readxl)
library(readr)
library(tidyverse)
library(tidytext)
library(dplyr)
setwd("/Users/sophiagamarro/Documents/Semestre II 2020/Data Wrangling/Lab1")
excel1<-read_excel('01-2018.xlsx')
excel2<-read_excel('02-2018.xlsx')
excel3<-read_excel('03-2018.xlsx')
excel4<-read_excel('04-2018.xlsx')
excel5<-read_excel('05-2018.xlsx')
excel6<-read_excel('06-2018.xlsx')
excel7<-read_excel('07-2018.xlsx')
excel8<-read_excel('08-2018.xlsx')
excel9<-read_excel('09-2018.xlsx')
excel10<-read_excel('10-2018.xlsx')
excel11<-read_excel('11-2018.xlsx')
excel1$Fecha <- "01-2018"
excel2$Fecha <- "01-2018"
excel3$Fecha <- "01-2018"
excel4$Fecha <- "01-2018"
excel5$Fecha <- "01-2018"
excel6$Fecha <- "01-2018"
excel7$Fecha <- "01-2018"
excel8$Fecha <- "01-2018"
excel9$Fecha <- "01-2018"
excel10$Fecha <- "01-2018"
excel11$Fecha <- "01-2018"
dataset<-dplyr::bind_rows(excel1,excel2, excel3, excel4, excel5, excel6, excel7, excel8, excel9, excel10, excel11)
write.csv(dataset,'dataset.csv')
#Problema2
moda <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
vector_1 <- c(4,1,3,9,7)
vector_2<- c(1,9,4,2,2)
vector_3 <- c(9,1,4,5,1)
lista <- list(vector_1,vector_2,vector_3)
lapply(lista, moda)
#Problema3
parque_vehicular<-read.delim("Parque.txt", header=T, sep="\t")
parque_vehicular
